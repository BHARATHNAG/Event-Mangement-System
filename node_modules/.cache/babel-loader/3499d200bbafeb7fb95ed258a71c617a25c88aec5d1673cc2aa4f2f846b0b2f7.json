{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive - Antino Labs 2022\\\\Desktop\\\\Frontend 12\\\\src\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element\n}) => {\n  const user = localStorage.getItem(\"token\");\n  const isAdmin = true; // Replace this with the logic to determine if the user is an admin\n\n  if (!user) {\n    // If user is not logged in, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (isAdmin) {\n    // If user is an admin, render the admin component\n    return element;\n  }\n  // else {\n  //   // If user is not an admin, render the public component\n  //   return (\n  //     <>\n  //       <Navigate to=\"/public/movies\" />\n  //       {element}\n  //     </>\n  //   );\n  // }\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\n// import React from \"react\";\n// import { Route, Navigate, Outlet } from \"react-router-dom\";\n\n// const PrivateRoute = () => {\n//   const user = localStorage.getItem(\"token\");\n//   console.log(\"checking Private Route\",user)\n//  return user?<Outlet /> : <Navigate to=\"/login\" />\n\n// };\n\n// export default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","PrivateRoute","element","user","localStorage","getItem","isAdmin","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive - Antino Labs 2022/Desktop/Frontend 12/src/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ element }) => {\r\n  const user = localStorage.getItem(\"token\");\r\n  const isAdmin = true; // Replace this with the logic to determine if the user is an admin\r\n\r\n  if (!user) {\r\n    // If user is not logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  if (isAdmin) {\r\n    // If user is an admin, render the admin component\r\n    return element;\r\n   } \r\n  // else {\r\n  //   // If user is not an admin, render the public component\r\n  //   return (\r\n  //     <>\r\n  //       <Navigate to=\"/public/movies\" />\r\n  //       {element}\r\n  //     </>\r\n  //   );\r\n  // }\r\n};\r\n\r\nexport default PrivateRoute;\r\n// import React from \"react\";\r\n// import { Route, Navigate, Outlet } from \"react-router-dom\";\r\n\r\n// const PrivateRoute = () => {\r\n//   const user = localStorage.getItem(\"token\");\r\n//   console.log(\"checking Private Route\",user)\r\n//  return user?<Outlet /> : <Navigate to=\"/login\" />\r\n\r\n// };\r\n\r\n// export default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACpC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC1C,MAAMC,OAAO,GAAG,IAAI,CAAC,CAAC;;EAEtB,IAAI,CAACH,IAAI,EAAE;IACT;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIL,OAAO,EAAE;IACX;IACA,OAAOJ,OAAO;EACf;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACU,EAAA,GAtBIX,YAAY;AAwBlB,eAAeA,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}